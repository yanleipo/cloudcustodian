# Owner, Expiry tags
vars:
  absent-tags-filter: &absent-tags
    - "tag:Owner": absent
    - "tag:Expiry": absent
  non-absent-tags-filter: &non-absent-tags
    - "tag:Owner": not-null
    - "tag:Expiry": not-null

policies:

  ##################################
  # policy: ec2-auto-tag-owner:
  ##################################
  - name: ec2-auto-tag-owner
    resource: ec2
    description: |
      Triggered when a new EC2 Instance is launched. Checks to see if
      it's missing the Owner tag. If missing it gets created
      with the value of the ID of whomever called the RunInstances API
    mode:
      type: cloudtrail
      role: arn:aws:iam::124361335672:role/CloudCustodian
      events:
        - RunInstances
    filters:
      - "tag:Owner": absent
    actions:
      - type: auto-tag-user
        tag: Owner

  ##################################
  # policy: ec2-tag-enforcement-mark:
  ##################################
  - name: ec2-tag-enforcement-mark
    resource: ec2
    comments: |
      Find all ec2 instances that are not compliant to tagging policies, and tag them for stoppage in 1 hour.
    filters:
      - and:
        - "tag:c7n_tag_compliance": absent
        - or:
          - "tag:Owner": absent
          - "tag:Expiry": absent
    mode:
      type: periodic
      role: arn:aws:iam::124361335672:role/CloudCustodian
      schedule: "cron(0/5 * * * ? *)" #Run every 5 mins
    actions: 
      - type: mark-for-op
        tag: c7n_tag_compliance
        op: stop
        hours: 1
      - type: notify
        violation_desc: Resource is missing either the Owner or Expiry tags
        action_desc: |
          EC2 instances that lack the required tags are marked to be 
          stopped in one hour if the tags are not added. 
        subject: "EC2 tag Compliance"
        to: 
          - https://hooks.slack.com/services/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
        transport:
          type: sqs
          queue: https://sqs.us-west-1.amazonaws.com/124361335672/custodian-mailer
          region: us-west-1

  ##################################
  # policy: ec2-tag-enforcement-unmark:
  ##################################
  - name: ec2-tag-enforcement-unmark
    resource: ec2
    comment: | 
      Any instances which have previously been marked as non compliant with tag policies,that are now compliant should be unmarked as non-compliant.
    filters:
      - "tag:c7n_tag_compliance": not-null
      - and:
        - "tag:Owner": not-null
        - "tag:Expiry": not-null
    mode: 
      type: periodic
      role: arn:aws:iam::124361335672:role/CloudCustodian
      schedule:  "cron(0/15 * * * ? *)" #Run every 15 mins
    actions: 
      - type: remove-tag
        tags: [c7n_tag_compliance]
      - type: notify
        action_desc: |
          EC2 instance(s) are no longer marked to be stopped
        cc: ["good"]
        subject: "EC2 tag Compliance"
        to:
          - https://hooks.slack.com/services/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
        transport:
          type: sqs
          queue: https://sqs.us-west-1.amazonaws.com/124361335672/custodian-mailer
          region: us-west-1

  ##################################
  # policy: ec2-tag-compliance-stop:
  ##################################
  - name: ec2-tag-compliance-stop
    resource: ec2
    description: |
      Preform the stop operation on instances marked to be stopped today if they have not been stopped
    filters:
      - type: value
        key: "State.Name"
        value: "stopped" 
        op: ne
      - type: marked-for-op
        tag: c7n_tag_compliance
        op: stop
    mode:
      schedule: "cron(0/180 * * * ? *)" #Run every 3 hours
      type: periodic
      role: arn:aws:iam::124361335672:role/CloudCustodian
    actions:
      - type: stop
      - type: mark-for-op
        tag: c7n_tag_compliance
        op: terminate
        hours: 3
      - type: notify
        action_desc: |
          Untagged EC2 instances have been "stopped" and are now marked to be terminated in one day if the 
          tags are not added.
        cc: ["warning"]
        subject: "EC2 Tag Compliance"
        to:
          - https://hooks.slack.com/services/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
        transport:
          type: sqs
          queue: https://sqs.us-west-1.amazonaws.com/124361335672/custodian-mailer
          region: us-west-1

  ##################################
  # policy: ec2-tag-enforcement-terminate:
  ##################################
  - name: ec2-tag-enforcement-terminate
    resource: ec2
    description: |
      Terminate all stopped instances marked for termination that do not meet the tagging requirnments if they have not been terminated
    filters: 
      - type: value
        key: "State.Name"
        value: "terminated" 
        op: ne
      - type: marked-for-op
        tag: c7n_tag_compliance
        op: terminate
    mode: 
      schedule: "cron(0/180 * * * ? *)" #Run every 3 hours
      type: periodic
      role: arn:aws:iam::124361335672:role/CloudCustodian
    actions:
      - type: terminate 
        force: true
      - type: notify
        action_desc: |
          Marked EC2 instances that have not added the required tags have been terminated.
          No further action required.
        cc: ["#000000"]
        subject: "EC2 Tag Compliance"
        to:
          - https://hooks.slack.com/services/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
        transport:
          type: sqs
          queue: https://sqs.us-west-1.amazonaws.com/124361335672/custodian-mailer
        violation_desc: "EC2 instances must have both Owner and Expiry tags."